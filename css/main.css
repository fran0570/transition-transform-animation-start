.wrapper {
	width: 800px;
	margin: 0 auto;
}

.transform,
.transition,
.animation{
	border: 1px solid #999;
	margin: 20px 0;
	padding: 0 0;
}

.load {
	border: 1px solid #999;
	margin: 20px 0;
	padding: 0 0;
	height: 300px;
}

.box {
	width: 200px;
	height: 200px;
}

.b1 {
	background-color: #80e1d4;
	/*blue*/
}

.b2 {
	background-color: #9696ff;
	/*orange*/
}

.b3 {
	background-color: #85e1f4;
	/*green*/
}

.b4 {
	background-color: #e89380;
	/*purple*/
}

.b5 {
	background-color: burlywood;
}

/* ********************************************** */
				/* Transtition */
/* ********************************************** */

/*  using transition b1 selector to select and apply
	transitions to box 1 */
.transition .b1 {
	transition-property: background-color;
	transition-duration: 1s;
	transition-delay: 500ms;
	transition-timing-function: ease-in;
}

.transition .b1:hover {
	background-color: #e89380;
}

/*  using transition b1 selector to select and apply
	combined transitions to box 2 */

.transition .b2 {
	transition-property: width;
	transition-duration: 2s;
	transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);

	/* for multiple combined transitions
	transition name duration timing-function delay */
	/* method 1: all transition have the same values*/
	transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);
	/* method 2: individual values set for each properties*/
	/* property name | duration | easing function | delay */
	transition: width 1s ease-in 0s, 
				height 2s linear 1s;
}

.transition .b2:hover {
	width: 500px;
	height: 100px;
}

/*  using transition b3 selector to select and apply
combined and seperate transitions to box 3 */
.transition .b3 {
	transition: width 1s, height 2s;
	transition-timing-function: ease;
	transition-delay: 500ms;
}

.transition .b3:hover {
	width: 500px;
	height: 100px;
}

/* ********************************************** */
				/* Transform */
/* ********************************************** */
/*  they use functions passing in argument 
	like c#/c++, java, and javascript */

.transform .b1 {
	/* rotate function passing in 0deg argument */
	transform: rotate(0deg);
	/* transform: rotateX(0deg); */
	/* transform-origin: top right; */
	transition: transform 0.5s ease-in-out 0.5s;
}

.transform .b1:hover{
	/* rotate function passing in 180deg argument */
	transform: rotate(180deg);
	/* transform: rotateX(180deg); */
}

.transform .b2 {
	transform: scale(1);
	/* transform-origin: top left; */
	transition: transform 0.5s ease-out;
}

.transform .b2:hover{
	transform: scale(2);
	/* transform: scale(2, 1.5); */
	/* transform: scaleX(2); */
	/* transform: scaleY(1.5); */
}

.transform .b3 {
	transform: translate(0) rotate(0);
	/* This doesn't work 
	transition: transform 1s ease-in 0s, 
				rotate 2s linear 1s;*/
	transition: transform .5s ease-in 0.5s;
}

.transform .b3:hover {
	transform: translate(300px, -100px) rotate(180deg);
}

.transform .b4 {
	transform: skew(0) rotate(0);
	transition: transform .5s ease-in 0.5s;
}

.transform .b4:hover {
	transform: skew(45deg) rotate(180deg);
}

/* ********************************************** */
				/* Animation */
/* ********************************************** */

@keyframes changeBg {
	from{
		background-color: #85e1f4;
	}
	to {
		background-color: #e89380;
	}
}

.animation .b1 {
	/* these are the minimal necessaire statements to make animation work */
	animation-name: changeBg;
	animation-duration: 2s;
	/* these are just extras */
	animation-delay: 2s;
	animation-iteration-count: infinite;
	/* animation-direction: reverse; */
	animation-timing-function: ease-in-out;
}

@keyframes translateBox {
	/* this method gives us 4 keyframes */
	0%{
		transform: translate(0);
	}
	33% {
		transform: translate(200px, 0);
	} 
	66% {
		transform: translate(200px, 200px);
	} 
	100% {
		transform: translate(400px, 200px);
	}
}

.animation .b2 {
	animation-name: translateBox;
	animation-delay: 5s;
	animation-duration: 4s;
	/* animation-iteration-count: infinite; */
	animation-timing-function: ease-in-out;
	/* makes the last keyframe the final state of the object */
	animation-fill-mode: forwards;
}

@keyframes translateBox2 {
	/* this method gives us 4 keyframes */
	0% {
		transform: translate(0);
	}
	33% {
		transform: translate(200px, 0);
	} 
	66% {
		transform: translate(200px, -200px);
	} 
	100% {
		transform: translate(0, -200px);
	}
}

.animation .b3 {
	animation-name: translateBox2;
	animation-delay: 5s;
	animation-duration: 4s;
	animation-timing-function: ease-in-out;
	/* makes the last keyframe the final state of the object */
	/* animation-fill-mode: forwards; */
}

/* shorthand form */
/* animation: name | duration | timing-function | delay | iteration-count |
	 direction | fill-mode */
.animation .b4 {
	animation: translateBox 4s ease-in-out 5s 1 normal forwards;
	background-size: cover;
}

@keyframes jump {
	/* this method gives us a 6 keyframes animation */
	10%,
	25% {
	  transform: scale(1.3, 0.7);
	}
  
	50% {
	  transform: scale(0.5, 2) translate(0, -200px);
	}
  
	60% {
	  transform: scale(1, 1) translate(0, 0);
	}
  
	75% {
	  transform: scale(1.3, 0.7) translate(0, 0);
	}
  
	85% {
	  transform: scale(1, 1) translate(0, 0);
	}
}

.animation .b5 {
	animation-name: jump;
	animation-duration: 1s;
}

/* ********************************************** */
				/* Animation WAVE */
/* ********************************************** */
	
.wave-container {
	display: flex;
	justify-content: center;
	align-items: center;
	
	width: 100%;
	height: 60%;
}

.bar {
	width: 20px;
	height: 100px;
	margin: 0 2px;
}
  
@keyframes wave {
	/* this method gives us 5 keyframes */
	0%,
	50%,
	100% {
		background-color: orange;
		transform: scale(1);
	}
	25% {
		background-color: yellow;
		transform: scale(1, 2);
	}
	75% {
		background-color: red;
		transform: scale(1, 0.5);
	}
}

.wave {
	animation-name: wave;
	animation-duration: 2s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}
/* what comes after the : colon = CSS Pseudo-elements */
.wave:nth-child(1) {
	animation-delay: 0.2s;
}

.wave:nth-child(2) {
	animation-delay: 0.4s;
}

.wave:nth-child(3) {
	animation-delay: 0.6s;
}

.wave:nth-child(4) {
	animation-delay: 0.8s;
}

.wave:nth-child(5) {
	animation-delay: 1s;
	
}

/* ********************************************** */
				/* Cool CSS Buttons */
/* ********************************************** */